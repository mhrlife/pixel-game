// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "short_id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "inactive"}, Default: "active"},
		{Name: "max_participants", Type: field.TypeInt8, Default: 5},
		{Name: "permission_video", Type: field.TypeEnum, Enums: []string{"all_participants", "only_admins"}, Default: "all_participants"},
		{Name: "permission_audio", Type: field.TypeEnum, Enums: []string{"all_participants", "only_admins"}, Default: "all_participants"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "room_short_id",
				Unique:  false,
				Columns: []*schema.Column{RoomsColumns[1]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "game_id", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_game_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
		},
	}
	// RoomAdminsColumns holds the columns for the "room_admins" table.
	RoomAdminsColumns = []*schema.Column{
		{Name: "room_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// RoomAdminsTable holds the schema information for the "room_admins" table.
	RoomAdminsTable = &schema.Table{
		Name:       "room_admins",
		Columns:    RoomAdminsColumns,
		PrimaryKey: []*schema.Column{RoomAdminsColumns[0], RoomAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "room_admins_room_id",
				Columns:    []*schema.Column{RoomAdminsColumns[0]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "room_admins_user_id",
				Columns:    []*schema.Column{RoomAdminsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		RoomsTable,
		UsersTable,
		RoomAdminsTable,
	}
)

func init() {
	RoomAdminsTable.ForeignKeys[0].RefTable = RoomsTable
	RoomAdminsTable.ForeignKeys[1].RefTable = UsersTable
}
