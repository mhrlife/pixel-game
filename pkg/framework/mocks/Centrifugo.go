// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Centrifugo is an autogenerated mock type for the Centrifugo type
type Centrifugo struct {
	mock.Mock
}

// Broadcast provides a mock function with given fields: ctx, eventName, data
func (_m *Centrifugo) Broadcast(ctx context.Context, eventName string, data interface{}) error {
	ret := _m.Called(ctx, eventName, data)

	if len(ret) == 0 {
		panic("no return value specified for Broadcast")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}) error); ok {
		r0 = rf(ctx, eventName, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OnlineWSUsers provides a mock function with given fields: ctx
func (_m *Centrifugo) OnlineWSUsers(ctx context.Context) (int, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for OnlineWSUsers")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (int, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) int); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PersonalMany provides a mock function with given fields: ctx, usersIds, eventName, data
func (_m *Centrifugo) PersonalMany(ctx context.Context, usersIds []interface{}, eventName string, data interface{}) error {
	ret := _m.Called(ctx, usersIds, eventName, data)

	if len(ret) == 0 {
		panic("no return value specified for PersonalMany")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []interface{}, string, interface{}) error); ok {
		r0 = rf(ctx, usersIds, eventName, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PersonalMessage provides a mock function with given fields: ctx, userID, eventName, data
func (_m *Centrifugo) PersonalMessage(ctx context.Context, userID interface{}, eventName string, data interface{}) error {
	ret := _m.Called(ctx, userID, eventName, data)

	if len(ret) == 0 {
		panic("no return value specified for PersonalMessage")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, string, interface{}) error); ok {
		r0 = rf(ctx, userID, eventName, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCentrifugo creates a new instance of Centrifugo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCentrifugo(t interface {
	mock.TestingT
	Cleanup(func())
}) *Centrifugo {
	mock := &Centrifugo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
