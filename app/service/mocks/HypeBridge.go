// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"
	ent "nevissGo/ent"

	mock "github.com/stretchr/testify/mock"
)

// HypeBridge is an autogenerated mock type for the HypeBridge type
type HypeBridge struct {
	mock.Mock
}

// UseHypeTX provides a mock function with given fields: ctx, tx, userID, amount
func (_m *HypeBridge) UseHypeTX(ctx context.Context, tx *ent.Tx, userID int64, amount int) error {
	ret := _m.Called(ctx, tx, userID, amount)

	if len(ret) == 0 {
		panic("no return value specified for UseHypeTX")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ent.Tx, int64, int) error); ok {
		r0 = rf(ctx, tx, userID, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHypeBridge creates a new instance of HypeBridge. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHypeBridge(t interface {
	mock.TestingT
	Cleanup(func())
}) *HypeBridge {
	mock := &HypeBridge{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
